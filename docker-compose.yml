services:
  postgres:
    build:
      context: .
      dockerfile: Dockerfile.db
    image: "ghcr.io/chheangg/karas-backend/postgres-multiple-db:latest"
    restart: always
    environment:
      POSTGRES_INITDB_ARGS: "-c max_prepared_transactions=100"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5431:5432'
    volumes:
      - postgres-data:/docker-entrypoint-initdb.d
    networks:
      - nginx_network
  backend:
    container_name: karas-backend-spring-boot
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
      SPRING_DATABASE_DIALECT: ${SPRING_DATABASE_DIALECT}
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: ${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      FLYWAY_USER: ${FLYWAY_USER}
      FLYWAY_PASSWORD: ${FLYWAY_PASSWORD}
      FLYWAY_URL: ${FLYWAY_URL}
      FLYWAY_LOCATIONS: ${FLYWAY_LOCATIONS}
      FLYWAY_SCHEMAS: ${FLYWAY_SCHEMAS}
    image: "ghcr.io/chheangg/karas-backend/karas-backend:latest"
    user: 1000:1000
    depends_on:
      - postgres
      - minio
    working_dir: /app
    ports:
      - 8080:8080
    networks:
      - nginx_network
  keycloak:
    container_name: karas-keycloak
    build:
      context: .
      dockerfile: Dockerfile.auth
    env_file: '.env.keycloak'
    environment:
      KC_HTTP_PORT: 3000
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_BOOTSTRAP_ADMIN_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_BOOTSTRAP_ADMIN_PASSWORD}
      KC_PROXY: edge
      KC_PROXY_ADDRESS_FORWARDING: true
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME: ${KC_HOSTNAME}
      KC_HOSTNAME_URL: ${KC_HOSTNAME_URL}
      KC_HOSTNAME_ADMIN: ${KC_HOSTNAME_ADMIN}
      KC_HOSTNAME_ADMIN_URL: ${KC_HOSTNAME_ADMIN_URL}
      KC_HTTP_RELATIVE_PATH: /auth
      KC_KARAS_FRONTEND_URL: ${KC_KARAS_FRONTEND_URL}
      KC_DB: ${KC_DB}
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_DB_URL: ${KC_DB_URL}
      QUARKUS_DATASOURCE_USER_STORE_DB_KIND: ${QUARKUS_DATASOURCE_USER_STORE_DB_KIND}
      QUARKUS_DATASOURCE_USER_STORE_USERNAME: ${QUARKUS_DATASOURCE_USER_STORE_USERNAME}
      QUARKUS_DATASOURCE_USER_STORE_PASSWORD: ${QUARKUS_DATASOURCE_USER_STORE_PASSWORD}
      QUARKUS_DATASOURCE_USER_STORE_JDBC_URL: ${QUARKUS_DATASOURCE_USER_STORE_JDBC_URL}
      QUARKUS_DATASOURCE_USER_STORE_JDBC_TRANSACTIONS: ${QUARKUS_DATASOURCE_USER_STORE_JDBC_TRANSACTIONS}
      QUARKUS_HIBERNATE_ORM_LOG_SQL: ${QUARKUS_HIBERNATE_ORM_LOG_SQL}
    image: "ghcr.io/chheangg/karas-backend/keycloak:latest"
    depends_on:
      - postgres
    ports:
      - 3000:3000
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - nginx_network
  minio:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_URL: ${MINIO_URL}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_ACCESS_SECRET: ${MINIO_ACCESS_SECRET}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_BROWSER_REDIRECT_URL: ${MINIO_BROWSER_REDIRECT_URL}
    volumes:
      - ./minio/data:/data
    ports:
      - 9000:9000
      - 9001:9001
    networks:
      - nginx_network
networks:
  nginx_network:
    external: true
volumes:
  postgres-data: